책 13장

FStreamableManager
-프로젝트 내에서 한개의 인스턴스만 생성해야 한다.
-AsyncLoad(): 비동기 로드

bool Load(FString path)
{
//복잡한 에셋 로드함
return true;
}

-FStreamableDelegate: 로드완료시 실행할 함수 등록.

GameInstance
-게임 시작~ 종료시까지 한개의 인스턴스가 유지됨.

Unreal Engine Smart Pointer
//앞에 T는 템플릿
-TUniquePtr : 유일한 소유권을 보장함, 공동소유 불가.
-TSharedPtr : 공동소유 가능
-TWeakPtr : 소유권 불가
//약포인터의 경우 객체가 지워져도 포인터가 사라지지 않고 남아있기 때문에 (객체 소유권이 없어서) 반드시 객체가 존재하는지
isValid로 검사를 해줘야한다.

TUniquePtr: 표준 포인터가 아닌 객체의 단독 소유권 개념, 공우불가, 소유권 이전은 가능
 -MyObj* ObjPtr = new MyObj();
 -TUniquePtr<MyObj> MyOwnObj = TUniquePtr<MyObj>(ObjPtr)
 -이후 다른 곳에서 더 이상 ObjPtr을 이용하여 UniquePtr을 선언할 수 없다.
 -TUniquePtr<MyObj>Obj2 = MyOwnObj; //오류
 -TUniquePtr<MyObj> Obj2 = MoveTemp(MyOwnObj) //소유권 이전
 -소유권 이전 후에는 MyOwnObj는 사용불가 (IsValid(MyOwnObj))

TSharedPtr: 공유포인터는 한개의 인스턴스에 대한 다수의 포인터 변수가 있을 수 있고 그 수가 0이면 객체 소멸

- MyObj* ObjPtr = newMyObj();
- TSharedPtr<MyObj>SharedObj = MakeShareable(ObjPtr); //공유 포인터 생성
- TSharedPtr<MyObj> Obj2 = SharedObj; //공유포인터를 공유함
- Obj2.Reset(); //소유권 포기
- 객체의 수가 0이 되지 않으면 소멸되지 않음 (문제가 될 수도 있음)

TWeakPtr: 약포인터 변수의 갯수에 상관없이
- TWeakPtr<UObj> MyWeakPtr;