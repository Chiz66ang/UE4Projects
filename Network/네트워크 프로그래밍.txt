네트워크 다중이용자 게임 환경 만들기 1단계

3인칭 템플릿으로 프로젝트 생성
ASP (Animation Starter Pack) 프로젝트에 추가
ASP에 포함된 애니메이션과 스켈레탈메시를 이용하여 Animation Blueprint 생성
플레이어 캐릭터에게 라이플 부착
게임을 시작하면 총을 허리에 쥔 캐릭터가 아이들 상태로 대기 중
FirstPersonProjectile을 이용하여 총알 블루프린트 클래스 생성
마우스 왼쪽을 누르면 총알이 발사되도록 한다.

변수 복제는 언제나 서버에서 클라이언트로.

Unreal Network 방식
 - Dedicated Server (전용서버: 출력화면이 없는 관리 기능만 있는 서버)
 - Listen Server  (서버의 역활도 하지만 클라이언트도 하나 띄워준다)

Replication: 복제
- 변수복제: 복제를 할 것인지 설정 가능
//언리얼 에디터에서 변수를 선택하고 레플리케이트 설정을 변경해준다.
- 함수복제: Run on Server, Multicast, Run on Owning Client
//언리얼 에디터에서 커스텀 함수/이벤트를 만들어 레블리케이트 설정을 변경해준다.

//서버에서 수많은 Client를 구분하기 위한 용어.
Authority -> 서버
Owning Client -> Client에서 조작할 수 있는 캐릭터를 가지고 있는 Client
Multicast -> 연결된 모든 (전체) Client에게 메시지를 보낸다.  

Run on Server: 서버에서 실행, 클라이언트에서 호출해야 함.
Multicast: (모든 클라이언트와 서버에서 실행) 반드시 서버에서 함수를 호출해야 함.
Run on Owning Client: (특정한 클라이언트에서 실행) 반드시 서버에서 호출해야 함.

RPC (Remote Procedure Call): 원격 함수 호출


Multicast 이용 예제: 3번 명중하면 폭발 파티클이 실행되고 캐릭터는 사라지게 한다.


플레이어가 접속하면 PC를 배열에 저장한다. (GameMode, PostLogin 오버라이드)
플레이어가 파괴될 때 배열에서 제거한다. (GameMode에 있는 배열에서 삭제)
마지막까지 남은 플레이어에게 승리 메시지를 출력한다. (배열의 원소가 한개가 되었을 때)(Run on Owning Client)

Switch Has Authority (현재 이 노드를 실행하는 객체가 Authority(서버) 인가 검사해주는 스위치)

채팅창 만들기: RPC이용 (Remote Procedure Call: 원격 함수 호출)
Process : 컴퓨터 내에서 현재 실행중인 프로그램.

RPC란? -언리얼 엔진에서 제공하는 기능 
어떤 컴퓨터의 프로세스가 다른 컴퓨터의 프로세스에 포함된 함수를 호출하여 실행하는 것. (서로 관련이 없는 프로세스인데 A컴퓨터에서 B컴퓨터를 가져다 쓴다)
 
변수복제, 함수복제 (서버에서 실행, 모두에서 실행, 소유 클라이언트에서 실행)도 RPC의 일부이다.

서버에서 실행: 변수 복제를 이용한 공지 채팅
모두에서 실행: 전체 채팅
소유 클라이언트에서 실행: 귓속말

Chatting: A에서 메시지를 입력하고 엔터를 치면 모든 플레이어에게 전달
