AI캐릭터에 UPawnSensingComponent 추가
-OnSeePawn.AddDynamic(this, 연결함수)
-OnHearNoise.AddDynamic(this, 연결함수)

UPROPERTY(VisibleAnywhere, BluprintReadWrite, Category = AI)
classl UPawnSensingComponent* PawnSensingComp;

UFUNCTION()
void OnSeePlayer(APawn* Pawn);

UFUNCTION()
void OnHearPlayer(APawn* PawnInstigator, const FVector & Location, float Volume);

CPP
PawnSensingComp = CreateDefaultSubobject<UPawnSensingComponent>(TEXT("PawnSensingComp"));
PawnSensingComp->SetPeripharaVisionAngle(90.0F); //시야각
PawnSensingComp->bHearNoises = true;
BeginPlay()에서...
PawnSensingComp->OnSeePawn.AddDynamic(this, &AAICharacter::OnSeePlayer);
PawnSensingComp->OnHearNoise.AddDynamic(this, &AAICharacter::OnHearPlayer);

인공지능 캐릭터, 시각/청각적 인지 후 추적기능 만들기

- AI 캐릭터는 플레이어 캐릭터 발견 즉시 추적을 실행한다.
- 추적시 시야에서 타겟을 놓치면 즉시 추적중지, 순찰활동으로 복귀
- OnSeePawn 델리게이트, Timer 활용
- 시야에서 놓침 지점까지 추적하여 3초 멈추고 다시 순찰모드

- AI 캐릭터가 추적해올 때 플에이어 캐릭터가 구조물 뒤로 숨는다.
- AI 캐릭터가 돌아갈 때 플레이어 캐릭터가 AI 캐릭터 추적한다.
- AI 캐릭터는 뒤에서 다가오는 발소리를 듣고 돌아서 대응한다.
소리를 만드는 함수: Make Noise. Noise Emitter.
발자국이 떨어질 때마다 소리를 내준다: 걷기 에니메이션에서 anim notify 이용

- AI 캐릭터 2개가 순찰 중에서 플레이어 캐릭터의 총소리를 듣는다.
- 총소리를 들은 AI캐릭터는 가장 가까운 은폐물 뒤로 숨는다.
- 숨을 때는 플레이어 캐릭터의 사격으로부터 보호될 수 있도록 숨는다.
- 잠시 후 AI캐릭터 팀장이 공격신호를 하면 동시에 플레이어 캐릭터를 공격한다.
	힌트: GameInstance, GameMode 클래스 활용. -> 매 틱마다 검사

TArray Actors;
UGameplayStatics::GetAllActorsOfClass(GetWorld(), ATargetPoint::StaticClass(), Actors);

- AI캐릭터가 숨어 있다가 전방을 관측하기 위해 옆으로 몸을 내밀고 다시 숨는다.
- 이 때 플레이어 캐릭터가 관찰된 경우에는 관층한 측의 반대편으로 몸을 내밀고 사격한다.
- 이 경우에는 2개의 AI 캐릭터가 동시에 행동하지 않도록 시간적 무작위성을 적용한다.
- FMath::RandRange(3,10) --> 3~10 사이의 무작위 수 추출

인공지능 캐릭터가 순찰 중에 그 중 하나가 플레이어를 발견했다.
팀장에게 보고한다.
팀장은 팀원의 보고를 받고 각 팀원의 행동을 결정하여 명령한다.
명령을 받은 각 캐릭터는 자신의 상태값을 재설정하고 블랙보드에 위치 설정.
- 델리게이트에 연결된 함수에서 애니메이션을 변경하기 위한 상태변수 설정
- 델리게이트에 연결된 함수에서 BT를 제어하기 위한 블랙보드에 상태값 설정.

auto GameInstance = Cast<UMyGameInstance>(GetGameInstance());
GameInstance->OnCommandChanged.AddDynamic(this, &AAIEnemyCharacter::CommandChanged);
if(index == 0)
{
GameInstance->OnReportChanged.AddDynamic(this, &AAIEnemyCharacter::ReportChanged);
}
